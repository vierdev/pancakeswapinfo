/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NonfungibleTokenPositionDescriptor,
  NonfungibleTokenPositionDescriptorInterface,
} from "../../contracts/NonfungibleTokenPositionDescriptor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_WETH9",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_nativeCurrencyLabelBytes",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_nftDescriptorEx",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "flipRatio",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeCurrencyLabel",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeCurrencyLabelBytes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftDescriptorEx",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "tokenRatioPriority",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "positionManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161160738038061160783398101604081905261002f91610070565b6001600160601b0319606093841b811660805260a09290925290911b1660c0526100ab565b80516001600160a01b038116811461006b57600080fd5b919050565b600080600060608486031215610084578283fd5b61008d84610054565b9250602084015191506100a260408501610054565b90509250925092565b60805160601c60a05160c05160601c61150c6100fb600039806103ec52806106075250806102a252806102d6528061038a52508061011a528061015f528061066652806106ba525061150c6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a18246e21161005b578063a18246e2146100e0578063b7af3cdc146100e8578063d8a8463f146100fd578063e9dc6375146101055761007d565b80634aa4a4fc146100825780637e5af771146100a05780639d7b0ea8146100c0575b600080fd5b61008a610118565b604051610097919061135e565b60405180910390f35b6100b36100ae366004611052565b61013c565b6040516100979190611372565b6100d36100ce366004611092565b61015b565b604051610097919061137d565b6100d36102a0565b6100f06102c4565b6040516100979190611386565b61008a6103ea565b6100f0610113366004611092565b61040e565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610148838361015b565b610152858461015b565b13949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156101a0575060631961029a565b8160011415610296576001600160a01b03831673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4814156101d7575061012c61029a565b6001600160a01b03831673dac17f958d2ee523a2206206994597c13d831ec71415610204575060c861029a565b6001600160a01b038316736b175474e89094c44da98b954eedeac495271d0f14156102315750606461029a565b6001600160a01b038316738daebade922df735c38c80c7ebd708af50815faa141561025f575060c71961029a565b6001600160a01b038316732260fac5e5542a773aa44fbcfedf7c193bc2c599141561028e575061012b1961029a565b50600061029a565b5060005b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b606060005b60208110801561032957507f0000000000000000000000000000000000000000000000000000000000000000816020811061030057fe5b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b15610336576001016102c9565b60008167ffffffffffffffff8111801561034f57600080fd5b506040519080825280601f01601f19166020018201604052801561037a576020820181803683370190505b50905060005b828110156103e3577f000000000000000000000000000000000000000000000000000000000000000081602081106103b457fe5b1a60f81b8282815181106103c457fe5b60200101906001600160f81b031916908160001a905350600101610380565b5091505090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60606000806000806000876001600160a01b03166399fbab88886040518263ffffffff1660e01b8152600401610444919061137d565b6101806040518083038186803b15801561045d57600080fd5b505afa158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190611229565b50505050509650965096509650965050506000610553896001600160a01b031663d5f394886040518163ffffffff1660e01b815260040160206040518083038186803b1580156104e457600080fd5b505afa1580156104f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051c919061102f565b6040518060600160405280896001600160a01b03168152602001886001600160a01b031681526020018762ffffff16815250610933565b9050600061056487876100ae610a2f565b9050600081156105745787610576565b865b9050600082156105865787610588565b885b90506000846001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156105c557600080fd5b505afa1580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd919061116e565b50505050509150507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f93a7911604051806101c001604052808f8152602001866001600160a01b03168152602001856001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316876001600160a01b0316146106ab576106a687610a33565b6106b3565b6106b36102c4565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316146106ff576106fa86610a33565b610707565b6107076102c4565b8152602001866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561074557600080fd5b505afa158015610759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077d9190611208565b60ff168152602001856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156107be57600080fd5b505afa1580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f69190611208565b60ff16815260200187151581526020018a60020b81526020018960020b81526020018460020b8152602001886001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561085a57600080fd5b505afa15801561086e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089291906110bd565b60020b81526020018b62ffffff168152602001886001600160a01b03168152506040518263ffffffff1660e01b81526004016108ce9190611399565b60006040518083038186803b1580156108e657600080fd5b505afa1580156108fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261092291908101906110d7565b9d9c50505050505050505050505050565b600081602001516001600160a01b031682600001516001600160a01b03161061095b57600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527f6ce8eb472fa82df5469c6ab6d485f17c3ad13c8cd7af59b3d4a8026c5ce0f7e260d5808301919091528251808303909101815260f5909101909152805191012090565b4690565b60606000610a61837f95d89b4100000000000000000000000000000000000000000000000000000000610a86565b9050805160001415610a7e57610a7683610cdb565b915050610a81565b90505b919050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000085161781529151815160609360009384936001600160a01b03891693919290918291908083835b60208310610b1f5780518252601f199092019160209182019101610b00565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610b7f576040519150601f19603f3d011682016040523d82523d6000602084013e610b84565b606091505b5091509150811580610b9557508051155b15610bb357604051806020016040528060008152509250505061029a565b805160201415610beb576000818060200190516020811015610bd457600080fd5b50519050610be181610ce8565b935050505061029a565b604081511115610cc357808060200190516020811015610c0a57600080fd5b8101908080516040519392919084640100000000821115610c2a57600080fd5b908301906020820185811115610c3f57600080fd5b8251640100000000811182820188101715610c5957600080fd5b82525081516020918201929091019080838360005b83811015610c86578181015183820152602001610c6e565b50505050905090810190601f168015610cb35780820380516001836020036101000a031916815260200191505b506040525050509250505061029a565b50506040805160208101909152600081529392505050565b6060610a7e826006610e28565b604080516020808252818301909252606091600091906020820181803683370190505090506000805b6020811015610d8a576000858260208110610d2857fe5b1a60f81b90507fff00000000000000000000000000000000000000000000000000000000000000811615610d815780848481518110610d6357fe5b60200101906001600160f81b031916908160001a9053506001909201915b50600101610d11565b5060008167ffffffffffffffff81118015610da457600080fd5b506040519080825280601f01601f191660200182016040528015610dcf576020820181803683370190505b50905060005b82811015610e1f57838181518110610de957fe5b602001015160f81c60f81b828281518110610e0057fe5b60200101906001600160f81b031916908160001a905350600101610dd5565b50949350505050565b606060028206158015610e3b5750600082115b8015610e48575060288211155b610eb357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f41646472657373537472696e675574696c3a20494e56414c49445f4c454e0000604482015290519081900360640190fd5b60008267ffffffffffffffff81118015610ecc57600080fd5b506040519080825280601f01601f191660200182016040528015610ef7576020820181803683370190505b5090506001600160a01b03841660005b60028504811015610f9b57600860138290030282901c600f600482901c1660f082168203610f3482610fa5565b868560020281518110610f4357fe5b60200101906001600160f81b031916908160001a905350610f6381610fa5565b868560020260010181518110610f7557fe5b60200101906001600160f81b031916908160001a9053505060019092019150610f079050565b5090949350505050565b6000600a8260ff161015610fc057506030810160f81b610a81565b506037810160f81b610a81565b8051610a81816114e7565b8051600281900b8114610a8157600080fd5b80516fffffffffffffffffffffffffffffffff81168114610a8157600080fd5b805161ffff81168114610a8157600080fd5b805162ffffff81168114610a8157600080fd5b600060208284031215611040578081fd5b815161104b816114e7565b9392505050565b600080600060608486031215611066578182fd5b8335611071816114e7565b92506020840135611081816114e7565b929592945050506040919091013590565b600080604083850312156110a4578182fd5b82356110af816114e7565b946020939093013593505050565b6000602082840312156110ce578081fd5b61104b82610fd8565b6000602082840312156110e8578081fd5b815167ffffffffffffffff808211156110ff578283fd5b818401915084601f830112611112578283fd5b81518181111561111e57fe5b604051601f8201601f19168101602001838111828210171561113c57fe5b604052818152838201602001871015611153578485fd5b6111648260208301602087016114b7565b9695505050505050565b600080600080600080600060e0888a031215611188578283fd5b8751611193816114e7565b96506111a160208901610fd8565b95506111af6040890161100a565b94506111bd6060890161100a565b93506111cb6080890161100a565b925060a088015163ffffffff811681146111e3578283fd5b60c089015190925080151581146111f8578182fd5b8091505092959891949750929550565b600060208284031215611219578081fd5b815160ff8116811461104b578182fd5b6000806000806000806000806000806000806101808d8f03121561124b578485fd5b8c516bffffffffffffffffffffffff81168114611266578586fd5b9b5061127460208e01610fcd565b9a5061128260408e01610fcd565b995061129060608e01610fcd565b985061129e60808e0161101c565b97506112ac60a08e01610fd8565b96506112ba60c08e01610fd8565b95506112c860e08e01610fea565b94506101008d015193506101208d015192506112e76101408e01610fea565b91506112f66101608e01610fea565b90509295989b509295989b509295989b565b6001600160a01b03169052565b15159052565b60020b9052565b6000815180845261133a8160208601602086016114b7565b601f01601f19169290920160200192915050565b62ffffff169052565b60ff169052565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b60006020825261104b6020830184611322565b6000602082528251602083015260208301516113b86040840182611308565b5060408301516113cb6060840182611308565b5060608301516101c08060808501526113e86101e0850183611322565b91506080850151601f198584030160a08601526114058382611322565b92505060a085015161141a60c0860182611357565b5060c085015161142d60e0860182611357565b5060e085015161010061144281870183611315565b86015190506101206114568682018361131b565b860151905061014061146a8682018361131b565b860151905061016061147e8682018361131b565b86015190506101806114928682018361131b565b86015190506101a06114a68682018361134e565b8601519050610f9b85830182611308565b60005b838110156114d25781810151838201526020016114ba565b838111156114e1576000848401525b50505050565b6001600160a01b03811681146114fc57600080fd5b5056fea164736f6c6343000706000a";

type NonfungibleTokenPositionDescriptorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NonfungibleTokenPositionDescriptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NonfungibleTokenPositionDescriptor__factory extends ContractFactory {
  constructor(...args: NonfungibleTokenPositionDescriptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _WETH9: PromiseOrValue<string>,
    _nativeCurrencyLabelBytes: PromiseOrValue<BytesLike>,
    _nftDescriptorEx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NonfungibleTokenPositionDescriptor> {
    return super.deploy(
      _WETH9,
      _nativeCurrencyLabelBytes,
      _nftDescriptorEx,
      overrides || {}
    ) as Promise<NonfungibleTokenPositionDescriptor>;
  }
  override getDeployTransaction(
    _WETH9: PromiseOrValue<string>,
    _nativeCurrencyLabelBytes: PromiseOrValue<BytesLike>,
    _nftDescriptorEx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _WETH9,
      _nativeCurrencyLabelBytes,
      _nftDescriptorEx,
      overrides || {}
    );
  }
  override attach(address: string): NonfungibleTokenPositionDescriptor {
    return super.attach(address) as NonfungibleTokenPositionDescriptor;
  }
  override connect(
    signer: Signer
  ): NonfungibleTokenPositionDescriptor__factory {
    return super.connect(signer) as NonfungibleTokenPositionDescriptor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NonfungibleTokenPositionDescriptorInterface {
    return new utils.Interface(
      _abi
    ) as NonfungibleTokenPositionDescriptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NonfungibleTokenPositionDescriptor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NonfungibleTokenPositionDescriptor;
  }
}
