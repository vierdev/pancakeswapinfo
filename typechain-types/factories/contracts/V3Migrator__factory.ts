/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  V3Migrator,
  V3MigratorInterface,
} from "../../contracts/V3Migrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH9",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nonfungiblePositionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "createAndInitializePoolIfNecessary",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pair",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "liquidityToMigrate",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "percentageToMigrate",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "refundAsETH",
            type: "bool",
          },
        ],
        internalType: "struct IV3Migrator.MigrateParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonfungiblePositionManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "selfPermit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "selfPermitAllowed",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "selfPermitAllowedIfNecessary",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "selfPermitIfNecessary",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001fae38038062001fae833981016040819052620000359162000082565b6001600160601b0319606094851b811660805292841b831660a05290831b821660c05290911b1660e052620000de565b80516001600160a01b03811681146200007d57600080fd5b919050565b6000806000806080858703121562000098578384fd5b620000a38562000065565b9350620000b36020860162000065565b9250620000c36040860162000065565b9150620000d36060860162000065565b905092959194509250565b60805160601c60a05160601c60c05160601c60e05160601c611e58620001566000398061092d5280610c6c5280610ca65280610cd05280610ead52508060dd52806106d25280610f065280610f905280611078528061110252508061028952806103845280610a065250806111985250611e586000f3fe6080604052600436106100c05760003560e01c8063b44a272211610074578063d44f2bf21161004e578063d44f2bf214610205578063d5f3948814610225578063f3995c671461023a5761013f565b8063b44a2722146101c8578063c2e3140a146101dd578063c45a0155146101f05761013f565b80634aa4a4fc116100a55780634aa4a4fc14610180578063a4a78f0c14610195578063ac9650d8146101a85761013f565b806313ead562146101445780634659a4941461016d5761013f565b3661013f573373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461013d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013490611c59565b60405180910390fd5b005b600080fd5b6101576101523660046117cc565b61024d565b6040516101649190611b3f565b60405180910390f35b61013d61017b366004611825565b610610565b34801561018c57600080fd5b506101576106d0565b61013d6101a3366004611825565b6106f4565b6101bb6101b636600461187e565b6107d1565b6040516101649190611b91565b3480156101d457600080fd5b5061015761092b565b61013d6101eb366004611825565b61094f565b3480156101fc57600080fd5b50610157610a04565b34801561021157600080fd5b5061013d6102203660046119fb565b610a28565b34801561023157600080fd5b50610157611196565b61013d610248366004611825565b6111ba565b60008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161061028757600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631698ee828686866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018262ffffff168152602001935050505060206040518083038186803b15801561033957600080fd5b505afa15801561034d573d6000803e3d6000fd5b505050506040513d602081101561036357600080fd5b5051905073ffffffffffffffffffffffffffffffffffffffff81166104f3577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a16712958686866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018262ffffff1681526020019350505050602060405180830381600087803b15801561043657600080fd5b505af115801561044a573d6000803e3d6000fd5b505050506040513d602081101561046057600080fd5b5051604080517ff637731d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015291519293509083169163f637731d9160248082019260009290919082900301818387803b1580156104d657600080fd5b505af11580156104ea573d6000803e3d6000fd5b50505050610608565b60008173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561053b57600080fd5b505afa15801561054f573d6000803e3d6000fd5b505050506040513d60e081101561056557600080fd5b5051905073ffffffffffffffffffffffffffffffffffffffff8116610606578173ffffffffffffffffffffffffffffffffffffffff1663f637731d846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156105ed57600080fd5b505af1158015610601573d6000803e3d6000fd5b505050505b505b949350505050565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e48101839052905173ffffffffffffffffffffffffffffffffffffffff881691638fcbaf0c9161010480830192600092919082900301818387803b1580156106b057600080fd5b505af11580156106c4573d6000803e3d6000fd5b50505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b604080517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015290517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b15801561078957600080fd5b505afa15801561079d573d6000803e3d6000fd5b505050506040513d60208110156107b357600080fd5b505110156107c9576107c9868686868686610610565b505050505050565b60608167ffffffffffffffff811180156107ea57600080fd5b5060405190808252806020026020018201604052801561081e57816020015b60608152602001906001900390816108095790505b50905060005b82811015610924576000803086868581811061083c57fe5b905060200281019061084e9190611d7e565b60405161085c929190611b2f565b600060405180830381855af49150503d8060008114610897576040519150601f19603f3d011682016040523d82523d6000602084013e61089c565b606091505b509150915081610902576044815110156108b557600080fd5b600481019050808060200190518101906108cf9190611946565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101349190611c0f565b8084848151811061090f57fe5b60209081029190910101525050600101610824565b5092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051869173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b1580156109c457600080fd5b505afa1580156109d8573d6000803e3d6000fd5b505050506040513d60208110156109ee57600080fd5b505110156107c9576107c98686868686866111ba565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610a3a6060830160408401611aa1565b60ff1611610a74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013490611c22565b6064610a866060830160408401611aa1565b60ff161115610ac1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013490611c90565b610ace60208201826117a9565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd33610af760208501856117a9565b84602001356040518463ffffffff1660e01b8152600401610b1a93929190611b60565b602060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c9190611909565b50600080610b7d60208401846117a9565b73ffffffffffffffffffffffffffffffffffffffff166389afcb44306040518263ffffffff1660e01b8152600401610bb59190611b3f565b6040805180830381600087803b158015610bce57600080fd5b505af1158015610be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c069190611a7e565b909250905060006064610c2c610c226060870160408801611aa1565b859060ff16611252565b81610c3357fe5b04905060006064610c4d610c226060880160408901611aa1565b81610c5457fe5b049050610c91610c6a60808701606088016117a9565b7f00000000000000000000000000000000000000000000000000000000000000008461127c565b610ccb610ca460a08701608088016117a9565b7f00000000000000000000000000000000000000000000000000000000000000008361127c565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663883164566040518061016001604052808a6060016020810190610d2991906117a9565b73ffffffffffffffffffffffffffffffffffffffff168152602001610d5460a08c0160808d016117a9565b73ffffffffffffffffffffffffffffffffffffffff168152602001610d7f60c08c0160a08d01611a13565b62ffffff168152602001610d9960e08c0160c08d01611925565b60020b8152602001610db26101008c0160e08d01611925565b60020b815260208101889052604081018790526101008b013560608201526101208b0135608082015260a001610df06101608c016101408d016117a9565b73ffffffffffffffffffffffffffffffffffffffff1681526020018a61016001358152506040518263ffffffff1660e01b8152600401610e309190611cc7565b608060405180830381600087803b158015610e4a57600080fd5b505af1158015610e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e829190611a2d565b935093505050858210156110225783821015610ed357610ed3610eab6080890160608a016117a9565b7f0000000000000000000000000000000000000000000000000000000000000000600061127c565b818603610ee86101a089016101808a016118ed565b8015610f4e575073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016610f3660808a0160608b016117a9565b73ffffffffffffffffffffffffffffffffffffffff16145b15611006576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90610fc5908490600401611d75565b600060405180830381600087803b158015610fdf57600080fd5b505af1158015610ff3573d6000803e3d6000fd5b505050506110013382611458565b611020565b61102061101960808a0160608b016117a9565b33836115ab565b505b8481101561118d578281101561104557611045610eab60a0890160808a016117a9565b80850361105a6101a089016101808a016118ed565b80156110c0575073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166110a860a08a0160808b016117a9565b73ffffffffffffffffffffffffffffffffffffffff16145b15611178576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90611137908490600401611d75565b600060405180830381600087803b15801561115157600080fd5b505af1158015611165573d6000803e3d6000fd5b505050506111733382611458565b61118b565b61118b61101960a08a0160808b016117a9565b505b50505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c48101839052905173ffffffffffffffffffffffffffffffffffffffff88169163d505accf9160e480830192600092919082900301818387803b1580156106b057600080fd5b600082158061126d5750508181028183828161126a57fe5b04145b61127657600080fd5b92915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b6020831061135157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611314565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146113b3576040519150601f19603f3d011682016040523d82523d6000602084013e6113b8565b606091505b50915091508180156113e65750805115806113e657508080602001905160208110156113e357600080fd5b50515b61145157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5341000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff84169083906040518082805190602001908083835b602083106114cf57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611492565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611531576040519150601f19603f3d011682016040523d82523d6000602084013e611536565b606091505b50509050806115a657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b6020831061168057805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611643565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146116e2576040519150601f19603f3d011682016040523d82523d6000602084013e6116e7565b606091505b5091509150818015611715575080511580611715575080806020019051602081101561171257600080fd5b50515b61145157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b803562ffffff8116811461179357600080fd5b919050565b803560ff8116811461179357600080fd5b6000602082840312156117ba578081fd5b81356117c581611e18565b9392505050565b600080600080608085870312156117e1578283fd5b84356117ec81611e18565b935060208501356117fc81611e18565b925061180a60408601611780565b9150606085013561181a81611e18565b939692955090935050565b60008060008060008060c0878903121561183d578182fd5b863561184881611e18565b9550602087013594506040870135935061186460608801611798565b92506080870135915060a087013590509295509295509295565b60008060208385031215611890578182fd5b823567ffffffffffffffff808211156118a7578384fd5b818501915085601f8301126118ba578384fd5b8135818111156118c8578485fd5b86602080830285010111156118db578485fd5b60209290920196919550909350505050565b6000602082840312156118fe578081fd5b81356117c581611e3d565b60006020828403121561191a578081fd5b81516117c581611e3d565b600060208284031215611936578081fd5b81358060020b81146117c5578182fd5b600060208284031215611957578081fd5b815167ffffffffffffffff8082111561196e578283fd5b818401915084601f830112611981578283fd5b81518181111561198d57fe5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011682010181811084821117156119c957fe5b6040528181528382016020018710156119e0578485fd5b6119f1826020830160208701611de8565b9695505050505050565b60006101a08284031215611a0d578081fd5b50919050565b600060208284031215611a24578081fd5b6117c582611780565b60008060008060808587031215611a42578384fd5b8451935060208501516fffffffffffffffffffffffffffffffff81168114611a68578384fd5b6040860151606090960151949790965092505050565b60008060408385031215611a90578182fd5b505080516020909101519092909150565b600060208284031215611ab2578081fd5b6117c582611798565b73ffffffffffffffffffffffffffffffffffffffff169052565b60008151808452611aed816020860160208601611de8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60020b9052565b62ffffff169052565b6000828483379101908152919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015611c02577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611bf0858351611ad5565b94509285019290850190600101611bb6565b5092979650505050505050565b6000602082526117c56020830184611ad5565b60208082526014908201527f50657263656e7461676520746f6f20736d616c6c000000000000000000000000604082015260600190565b60208082526009908201527f4e6f742057455448390000000000000000000000000000000000000000000000604082015260600190565b60208082526014908201527f50657263656e7461676520746f6f206c61726765000000000000000000000000604082015260600190565b600061016082019050611cdb828451611abb565b6020830151611ced6020840182611abb565b506040830151611d006040840182611b26565b506060830151611d136060840182611b1f565b506080830151611d266080840182611b1f565b5060a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151611d6482850182611abb565b505061014092830151919092015290565b90815260200190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611db2578283fd5b83018035915067ffffffffffffffff821115611dcc578283fd5b602001915036819003821315611de157600080fd5b9250929050565b60005b83811015611e03578181015183820152602001611deb565b83811115611e12576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611e3a57600080fd5b50565b8015158114611e3a57600080fdfea164736f6c6343000706000a";

type V3MigratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: V3MigratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class V3Migrator__factory extends ContractFactory {
  constructor(...args: V3MigratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _deployer: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _WETH9: PromiseOrValue<string>,
    _nonfungiblePositionManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<V3Migrator> {
    return super.deploy(
      _deployer,
      _factory,
      _WETH9,
      _nonfungiblePositionManager,
      overrides || {}
    ) as Promise<V3Migrator>;
  }
  override getDeployTransaction(
    _deployer: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _WETH9: PromiseOrValue<string>,
    _nonfungiblePositionManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _deployer,
      _factory,
      _WETH9,
      _nonfungiblePositionManager,
      overrides || {}
    );
  }
  override attach(address: string): V3Migrator {
    return super.attach(address) as V3Migrator;
  }
  override connect(signer: Signer): V3Migrator__factory {
    return super.connect(signer) as V3Migrator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): V3MigratorInterface {
    return new utils.Interface(_abi) as V3MigratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): V3Migrator {
    return new Contract(address, _abi, signerOrProvider) as V3Migrator;
  }
}
