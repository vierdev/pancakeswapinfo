/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  QuoterV2,
  QuoterV2Interface,
} from "../../../contracts/lens/QuoterV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH9",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "pancakeV3SwapCallback",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "quoteExactInput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint160[]",
        name: "sqrtPriceX96AfterList",
        type: "uint160[]",
      },
      {
        internalType: "uint32[]",
        name: "initializedTicksCrossedList",
        type: "uint32[]",
      },
      {
        internalType: "uint256",
        name: "gasEstimate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct IQuoterV2.QuoteExactInputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "quoteExactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96After",
        type: "uint160",
      },
      {
        internalType: "uint32",
        name: "initializedTicksCrossed",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "gasEstimate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "quoteExactOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint160[]",
        name: "sqrtPriceX96AfterList",
        type: "uint160[]",
      },
      {
        internalType: "uint32[]",
        name: "initializedTicksCrossedList",
        type: "uint32[]",
      },
      {
        internalType: "uint256",
        name: "gasEstimate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct IQuoterV2.QuoteExactOutputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "quoteExactOutputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96After",
        type: "uint160",
      },
      {
        internalType: "uint32",
        name: "initializedTicksCrossed",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "gasEstimate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200218d3803806200218d833981016040819052620000349162000079565b6001600160601b0319606093841b811660805291831b821660a05290911b1660c052620000c2565b80516001600160a01b03811681146200007457600080fd5b919050565b6000806000606084860312156200008e578283fd5b62000099846200005c565b9250620000a9602085016200005c565b9150620000b9604085016200005c565b90509250925092565b60805160601c60a05160601c60c05160601c61208b62000102600039806104f052508061074652508061016d5280610afd5280610b76525061208b6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c45a01551161005b578063c45a015514610106578063c6a5026a1461010e578063cdca175314610121578063d5f394881461013457610088565b806323a69e751461008d5780632f80bb1d146100a25780634aa4a4fc146100ce578063bd21704a146100e3575b600080fd5b6100a061009b366004611bc8565b61013c565b005b6100b56100b0366004611b62565b6102f8565b6040516100c59493929190611ee6565b60405180910390f35b6100d66104ee565b6040516100c59190611e29565b6100f66100f1366004611c80565b610512565b6040516100c59493929190611f8e565b6100d6610744565b6100f661011c366004611c80565b610768565b6100b561012f366004611b62565b610923565b6100d6610afb565b600083138061014b5750600082135b61015457600080fd5b600080600061016284610b1f565b9250925092506101947f0000000000000000000000000000000000000000000000000000000000000000848484610b50565b5060008060008089136101da578573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610888a60000361020f565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161089896000035b9250925092506000610222878787610b6f565b90506000808273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561026d57600080fd5b505afa158015610281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a59190611ca2565b50505050509150915085156102cb57604051848152826020820152816040820152606081fd5b600054156102e15760005484146102e157600080fd5b604051858152826020820152816040820152606081fd5b6000606080600061030886610bad565b67ffffffffffffffff8111801561031e57600080fd5b50604051908082528060200260200182016040528015610348578160200160208202803683370190505b50925061035486610bad565b67ffffffffffffffff8111801561036a57600080fd5b50604051908082528060200260200182016040528015610394578160200160208202803683370190505b50915060005b60008060006103a88a610b1f565b92509250925060008060008061042b6040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250610512565b9350935093509350828b898151811061044057fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a898151811061048757fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926104b48e610bdc565b156104c9576104c28e610be4565b9d506104d9565b8c9b5050505050505050506104e5565b5050505050505061039a565b92959194509250565b7f000000000000000000000000000000000000000000000000000000000000000081565b60208101518151606083015160009283928392839273ffffffffffffffffffffffffffffffffffffffff808216908416109284926105509290610b6f565b9050866080015173ffffffffffffffffffffffffffffffffffffffff166000141561057e5760408701516000555b60005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856105ae8c60400151610c1f565b6000038c6080015173ffffffffffffffffffffffffffffffffffffffff166000146105dd578c60800151610603565b876105fc5773fffd8963efd1fc6a506488495d951d5263988d25610603565b6401000276a45b8d602001518e606001518f6000015160405160200161062493929190611dc3565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610653959493929190611e4a565b6040805180830381600087803b15801561066c57600080fd5b505af19250505080156106ba575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526106b791810190611ba5565b60015b610737573d8080156106e8576040519150601f19603f3d011682016040523d82523d6000602084013e6106ed565b606091505b505a82039450886080015173ffffffffffffffffffffffffffffffffffffffff166000141561071b57600080555b610726818487610c51565b97509750975097505050505061073d565b50505050505b9193509193565b7f000000000000000000000000000000000000000000000000000000000000000081565b60208101518151606083015160009283928392839273ffffffffffffffffffffffffffffffffffffffff808216908416109284926107a69290610b6f565b905060005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856107d88c60400151610c1f565b60808d015173ffffffffffffffffffffffffffffffffffffffff1615610802578c60800151610828565b876108215773fffd8963efd1fc6a506488495d951d5263988d25610828565b6401000276a45b8d600001518e606001518f6020015160405160200161084993929190611dc3565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610878959493929190611e4a565b6040805180830381600087803b15801561089157600080fd5b505af19250505080156108df575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526108dc91810190611ba5565b60015b610737573d80801561090d576040519150601f19603f3d011682016040523d82523d6000602084013e610912565b606091505b505a82039450610726818487610c51565b6000606080600061093386610bad565b67ffffffffffffffff8111801561094957600080fd5b50604051908082528060200260200182016040528015610973578160200160208202803683370190505b50925061097f86610bad565b67ffffffffffffffff8111801561099557600080fd5b506040519080825280602002602001820160405280156109bf578160200160208202803683370190505b50915060005b60008060006109d38a610b1f565b925092509250600080600080610a566040518060a001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250610768565b9350935093509350828b8981518110610a6b57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a8981518110610ab257fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b92610adf8e610bdc565b156104c957610aed8e610be4565b9d50505050505050506109c5565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008080610b2d8482610d25565b9250610b3a846014610e25565b9050610b47846017610d25565b91509193909250565b6000610b6685610b61868686610f15565b610f92565b95945050505050565b6000610ba57f0000000000000000000000000000000000000000000000000000000000000000610ba0868686610f15565b610fc2565b949350505050565b805160177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec909101045b919050565b516042111590565b8051606090610c199083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9016110f8565b92915050565b60007f80000000000000000000000000000000000000000000000000000000000000008210610c4d57600080fd5b5090565b6000806000806000808773ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610ca057600080fd5b505afa158015610cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd89190611ca2565b50939650610ced94508d93506112df92505050565b91975095509050610d1573ffffffffffffffffffffffffffffffffffffffff891683836113a0565b9350869250505093509350935093565b600081826014011015610d9957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b8160140183511015610e0c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b600081826003011015610e9957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b8160030183511015610f0c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b610f1d611a31565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115610f55579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b6000610f9e8383610fc2565b90503373ffffffffffffffffffffffffffffffffffffffff821614610c1957600080fd5b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161061100457600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527f6ce8eb472fa82df5469c6ab6d485f17c3ad13c8cd7af59b3d4a8026c5ce0f7e260d5808301919091528251808303909101815260f5909101909152805191012090565b60608182601f01101561116c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b8282840110156111dd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b8183018451101561124f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b60608215801561126e57604051915060008252602082016040526112d6565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156112a757805183526020928301920161128f565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6000806000835160601461137f57604484511015611332576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132990611eaf565b60405180910390fd5b6004840193508380602001905181019061134c9190611c16565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113299190611e9c565b838060200190518101906113939190611d3c565b9250925092509193909250565b60008060008060008060008060088b73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113f457600080fd5b505afa158015611408573d6000803e3d6000fd5b505050506040513d602081101561141e57600080fd5b5051600290810b908c900b8161143057fe5b0560020b901d905060006101008c73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561148357600080fd5b505afa158015611497573d6000803e3d6000fd5b505050506040513d60208110156114ad57600080fd5b5051600290810b908d900b816114bf57fe5b0560020b816114ca57fe5b079050600060088d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561151757600080fd5b505afa15801561152b573d6000803e3d6000fd5b505050506040513d602081101561154157600080fd5b5051600290810b908d900b8161155357fe5b0560020b901d905060006101008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115a657600080fd5b505afa1580156115ba573d6000803e3d6000fd5b505050506040513d60208110156115d057600080fd5b5051600290810b908e900b816115e257fe5b0560020b816115ed57fe5b07905060008160ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296856040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561164e57600080fd5b505afa158015611662573d6000803e3d6000fd5b505050506040513d602081101561167857600080fd5b50511611801561170b57508d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156116c957600080fd5b505afa1580156116dd573d6000803e3d6000fd5b505050506040513d60208110156116f357600080fd5b5051600290810b908d900b8161170557fe5b0760020b155b801561171c57508b60020b8d60020b135b945060008360ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296876040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561177c57600080fd5b505afa158015611790573d6000803e3d6000fd5b505050506040513d60208110156117a657600080fd5b50511611801561183957508d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117f757600080fd5b505afa15801561180b573d6000803e3d6000fd5b505050506040513d602081101561182157600080fd5b5051600290810b908e900b8161183357fe5b0760020b155b801561184a57508b60020b8d60020b125b95508160010b8460010b128061187657508160010b8460010b14801561187657508060ff168360ff1611155b1561188c57839950829750819850809650611899565b8199508097508398508296505b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff87161b9150505b8560010b8760010b136119d0578560010b8760010b141561190a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff858103161c165b6000818c73ffffffffffffffffffffffffffffffffffffffff16635339c2968a6040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561196157600080fd5b505afa158015611975573d6000803e3d6000fd5b505050506040513d602081101561198b57600080fd5b5051169050611999816119f8565b61ffff16989098019750506001909501947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6118c5565b81156119dd576001880397505b82156119ea576001880397505b505050505050509392505050565b6000805b8215610c19577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301909216916001016119fc565b604080516060810182526000808252602082018190529181019190915290565b600082601f830112611a61578081fd5b8135611a74611a6f82611fe9565b611fc5565b818152846020838601011115611a88578283fd5b816020850160208301379081016020019190915292915050565b8051600281900b8114610bd757600080fd5b600060a08284031215611ac5578081fd5b60405160a0810181811067ffffffffffffffff82111715611ae257fe5b6040529050808235611af381612059565b81526020830135611b0381612059565b602082015260408381013590820152606083013562ffffff81168114611b2857600080fd5b6060820152611b3960808401611b45565b60808201525092915050565b8035610bd781612059565b805161ffff81168114610bd757600080fd5b60008060408385031215611b74578182fd5b823567ffffffffffffffff811115611b8a578283fd5b611b9685828601611a51565b95602094909401359450505050565b60008060408385031215611bb7578182fd5b505080516020909101519092909150565b600080600060608486031215611bdc578081fd5b8335925060208401359150604084013567ffffffffffffffff811115611c00578182fd5b611c0c86828701611a51565b9150509250925092565b600060208284031215611c27578081fd5b815167ffffffffffffffff811115611c3d578182fd5b8201601f81018413611c4d578182fd5b8051611c5b611a6f82611fe9565b818152856020838501011115611c6f578384fd5b610b66826020830160208601612029565b600060a08284031215611c91578081fd5b611c9b8383611ab4565b9392505050565b600080600080600080600060e0888a031215611cbc578283fd5b8751611cc781612059565b9650611cd560208901611aa2565b9550611ce360408901611b50565b9450611cf160608901611b50565b9350611cff60808901611b50565b925060a088015163ffffffff81168114611d17578283fd5b60c08901519092508015158114611d2c578182fd5b8091505092959891949750929550565b600080600060608486031215611d50578081fd5b835192506020840151611d6281612059565b9150611d7060408501611aa2565b90509250925092565b60008151808452611d91816020860160208601612029565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152611e9160a0830184611d79565b979650505050505050565b600060208252611c9b6020830184611d79565b60208082526010908201527f556e6578706563746564206572726f7200000000000000000000000000000000604082015260600190565b600060808201868352602060808185015281875180845260a0860191508289019350845b81811015611f3c57845173ffffffffffffffffffffffffffffffffffffffff1683529383019391830191600101611f0a565b505084810360408601528651808252908201925081870190845b81811015611f7857825163ffffffff1685529383019391830191600101611f56565b5050505060609290920192909252949350505050565b93845273ffffffffffffffffffffffffffffffffffffffff92909216602084015263ffffffff166040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715611fe157fe5b604052919050565b600067ffffffffffffffff821115611ffd57fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b8381101561204457818101518382015260200161202c565b83811115612053576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461207b57600080fd5b5056fea164736f6c6343000706000a";

type QuoterV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QuoterV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QuoterV2__factory extends ContractFactory {
  constructor(...args: QuoterV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _deployer: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _WETH9: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<QuoterV2> {
    return super.deploy(
      _deployer,
      _factory,
      _WETH9,
      overrides || {}
    ) as Promise<QuoterV2>;
  }
  override getDeployTransaction(
    _deployer: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _WETH9: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _deployer,
      _factory,
      _WETH9,
      overrides || {}
    );
  }
  override attach(address: string): QuoterV2 {
    return super.attach(address) as QuoterV2;
  }
  override connect(signer: Signer): QuoterV2__factory {
    return super.connect(signer) as QuoterV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuoterV2Interface {
    return new utils.Interface(_abi) as QuoterV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QuoterV2 {
    return new Contract(address, _abi, signerOrProvider) as QuoterV2;
  }
}
