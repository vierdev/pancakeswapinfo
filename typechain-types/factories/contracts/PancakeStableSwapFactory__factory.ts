/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PancakeStableSwapFactory,
  PancakeStableSwapFactoryInterface,
} from "../../contracts/PancakeStableSwapFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPancakeStableSwapLPFactory",
        name: "_LPFactory",
        type: "address",
      },
      {
        internalType: "contract IPancakeStableSwapDeployer",
        name: "_SwapTwoPoolDeployer",
        type: "address",
      },
      {
        internalType: "contract IPancakeStableSwapDeployer",
        name: "_SwapThreePoolDeployer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "swapContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenC",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "LP",
        type: "address",
      },
    ],
    name: "NewStableSwapPair",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "LPFactory",
    outputs: [
      {
        internalType: "contract IPancakeStableSwapLPFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SwapThreePoolDeployer",
    outputs: [
      {
        internalType: "contract IPancakeStableSwapDeployer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SwapTwoPoolDeployer",
    outputs: [
      {
        internalType: "contract IPancakeStableSwapDeployer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapContract",
        type: "address",
      },
    ],
    name: "addPairInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_A",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_admin_fee",
        type: "uint256",
      },
    ],
    name: "createSwapPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenC",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_A",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_admin_fee",
        type: "uint256",
      },
    ],
    name: "createThreePoolPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "getPairInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "swapContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "address",
            name: "LPContract",
            type: "address",
          },
        ],
        internalType: "struct PancakeStableSwapFactory.StableSwapPairInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "getThreePoolPairInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "swapContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "address",
            name: "token2",
            type: "address",
          },
          {
            internalType: "address",
            name: "LPContract",
            type: "address",
          },
        ],
        internalType:
          "struct PancakeStableSwapFactory.StableSwapThreePoolPairInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pairLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stableSwapPairInfo",
    outputs: [
      {
        internalType: "address",
        name: "swapContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "token2",
        type: "address",
      },
      {
        internalType: "address",
        name: "LPContract",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "swapPairContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type PancakeStableSwapFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PancakeStableSwapFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PancakeStableSwapFactory__factory extends ContractFactory {
  constructor(...args: PancakeStableSwapFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _LPFactory: AddressLike,
    _SwapTwoPoolDeployer: AddressLike,
    _SwapThreePoolDeployer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _LPFactory,
      _SwapTwoPoolDeployer,
      _SwapThreePoolDeployer,
      overrides || {}
    );
  }
  override deploy(
    _LPFactory: AddressLike,
    _SwapTwoPoolDeployer: AddressLike,
    _SwapThreePoolDeployer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _LPFactory,
      _SwapTwoPoolDeployer,
      _SwapThreePoolDeployer,
      overrides || {}
    ) as Promise<
      PancakeStableSwapFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PancakeStableSwapFactory__factory {
    return super.connect(runner) as PancakeStableSwapFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PancakeStableSwapFactoryInterface {
    return new Interface(_abi) as PancakeStableSwapFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PancakeStableSwapFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PancakeStableSwapFactory;
  }
}
